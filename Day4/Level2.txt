Create a program to find the factors of a number taken as user input, store the factors in an array, and display the factors. Also find the sum, sum of square of factors and product of the factors and display the results
Hint => 
Take the input for a number
Write a static Method to find the factors of the number and save them in an array and return the array. 
To find factors and save to array will have two loops. The first loop to find the count and initialize the array with the count. And the second loop save the factors into the array
Write a method to find the sum of the factors using factors array
Write a method to find the product of the factors using factors array
Write a method to find the sum of square of the factors using Math.pow() method

import java.util.Scanner;
public class Main{
   public static double[] factors(int n){
       int count =0;
       for(int i=1;i<=n;i++)
       {
           if(n%i==0)
           {
               count++;
           }
       }
       int[] arr = new int[count];
       int index= 0;
       for(int i=1;i<=n;i++)
       {
           if(n%i==0)
           {
               arr[index]=i;
               index++;
           }
       }
       int sum = 0;
       int product = 1;
       double square = 0;
       for(int i =0; i< arr.length;i++)
       {
           sum +=arr[i];
           product*=arr[i];
           square+=Math.pow(arr[i],2);
       }
       return new double[] {sum,product,square};
       }
       public static void main(String[] args)
       {
           Scanner scanner = new Scanner(System.in);
           int n = scanner.nextInt();
          double[] array = factors(n);
          for(int i =0;i< array.length;i++)
          {
              System.out.println(array[i]);

          }
   }
}


Write a program to find the sum of n natural numbers using recursive method and compare the result with the formulae n*(n+1)/2 and show the result from both computations is correct. 
Hint => 
Take the user input number and check whether it's a Natural number, if not exit
Write a Method to find the sum of n natural numbers using recursion
Write a Method to find the sum of n natural numbers using the formulae n*(n+1)/2 
Compare the two results and print the result

import java.util.Scanner;
public class Main{
   public static int[] method(int n){
       int sum1;
       if(n<=1){
           sum1= n;
       }else{
           int[] recursiveResult = method(n - 1);
           sum1 = n + recursiveResult[0];}
       int sum2 = (n*(n+1))/2;
       return new int[]{sum1,sum2};
   }
   public static void main(String[] args){
       int n = 5;
       int[] result = method(n);
       System.out.printf("Recursion: %d, formula: %d",result[0],result[1]);
   }
}


Write a program that takes a year as input and outputs the Year is a Leap Year or not 
Hint => 
The LeapYear program only works for year >= 1582, corresponding to a year in the Gregorian calendar. 
Also Leap year is divisible by 4 and not divisible by 100 or divisible by 400
Write a method to check for Leap Year using the conditions a and b

import java.util.Scanner;
public class Main{
   public static void leapyear(int year){
       if (year > 1582) {

       if(((year%4==0)&&(year%100!=0))||(year%400==0)) {
           System.out.println("leap year");
       }else{
           System.out.println("not a leap year");
       }}}
public static void main(String[] args){
       Scanner scanner = new Scanner(System.in);
   System.out.println("Enter the year: ");
           int year = scanner.nextInt();
           leapyear(year);
       }
   }


Extend or Create a UnitConvertor utility class similar to the one shown in the notes to do the following.  Please define static methods for all the UnitConvertor class methods. E.g. 
public static double convertKmToMiles(double km) => 
Method To convert kilometers to miles and return the value. Use the following code  double km2miles = 0.621371;
Method to convert miles to kilometers and return the value. Use the following code  double miles2km = 1.60934;
Method to convert meters to feet and return the value. Use the following code to convert  double meters2feet = 3.28084;
Method to convert feet to meters and return the value. Use the following code to convert  double feet2meters = 0.3048;

import java.util.Scanner;
public class Main {
   public static double convertKmToMiles(double km) {
       double km2miles = 0.621371;
       return km * km2miles;
   }
   public static double convertMilesToKm(double miles) {
       double miles2km = 1.60934;
       return miles * miles2km;
   }
   public static double convertMetersToFeet(double meters) {
       double meters2feet = 3.28084;
       return meters * meters2feet;
   }
   public static double convertFeetToMeters(double feet) {
       double feet2meters = 0.3048;
       return feet * feet2meters;
   }
   public static void main(String[] args){
   Scanner scanner = new Scanner(System.in);
       System.out.println("ENTER Feet:");
   double feet = scanner.nextDouble();
       System.out.println("Enter meters:");
   double meters = scanner.nextDouble();
       System.out.println("Enter miles");
   double miles = scanner.nextDouble();
       System.out.println("Enter kms:");
   double km = scanner.nextDouble();
   double result1 = convertKmToMiles(km);
   double result2 = convertMilesToKm(miles);
   double result3 = convertMetersToFeet(meters);
   double result4 = convertFeetToMeters(feet);
       System.out.printf("km to m : %.2f, miles to km: %.2f, meters to feet: %.2f , feet to meters: %.2f",result1,result2,result3,result4);
   }
}


Extend or Create a UnitConvertor utility class similar to the one shown in the notes to do the following.  Please define static methods for all the UnitConvertor class methods. E.g. 
public static double convertYardsToFeet(double yards) => 
Method to convert yards to feet and return the value. Use following code to convert  double yards2feet = 3;
Method to convert feet to yards and return the value. Use following code to convert  double feet2yards = 0.333333;
Method to convert meters to inches and return the value. Use following code to convert  double meters2inches = 39.3701;
Method to convert inches to meters and return the value. Use following code to convert  double inches2meters = 0.0254;
Method to convert inches to centimeters and return the value. Use the following code  double inches2cm = 2.54;

import java.util.Scanner;
public class Main {
    public static double convertKmToMiles(double km) {
        double km2miles = 0.621371;
        return km * km2miles;
    }
    public static double convertMilesToKm(double miles) {
        double miles2km = 1.60934;
        return miles * miles2km;
    }
    public static double convertMetersToFeet(double meters) {
        double meters2feet = 3.28084;
        return meters * meters2feet;
    }
    public static double convertFeetToMeters(double feet) {
        double feet2meters = 0.3048;
        return feet * feet2meters;
    }
    public static double convertYardsToFeet(double yards) {
        double yards2feet = 3;
        return yards * yards2feet;
    }
    public static double convertFeetToYards(double feet) {
        double feet2yards = 0.333333;
        return feet * feet2yards;
    }
    public static double convertMetersToInches(double meters) {
        double meters2inches = 39.3701;
        return meters * meters2inches;
    }
    public static double convertInchesToMeters(double inches) {
        double inches2meters = 0.0254;
        return inches * inches2meters;
    }
    public static double convertInchesToCentimeters(double inches) {
        double inches2cm = 2.54;
        return inches * inches2cm;
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("ENTER Feet:");
        double feet = scanner.nextDouble();
        System.out.println("Enter meters:");
        double meters = scanner.nextDouble();
        System.out.println("Enter miles");
        double miles = scanner.nextDouble();
        System.out.println("Enter kms:");
        double km = scanner.nextDouble();
        System.out.println("Enter yards:");
        double yards = scanner.nextDouble();
        System.out.println("Enter inches:");
        double inches = scanner.nextDouble();
        double result1 = convertKmToMiles(km);
        double result2 = convertMilesToKm(miles);
        double result3 = convertMetersToFeet(meters);
        double result4 = convertFeetToMeters(feet);
        double result5 = convertYardsToFeet(yards);
        double result6 = convertFeetToYards(feet);
        double result7 = convertMetersToInches(meters);
        double result8 = convertInchesToMeters(inches);
        double result9 = convertInchesToCentimeters(inches);
        System.out.printf("km to m : %.2f, miles to km: %.2f, meters to feet: %.2f, feet to meters: %.2f, yards to feet: %.2f, feet to yards: %.2f, meters to inches: %.2f, inches to meters: %.2f, inches to cm: %.2f",
                result1, result2, result3, result4, result5, result6, result7, result8, result9);
        scanner.close();
    }
}



Write a program to take user input for the age of all 10 students in a class and check whether the student can vote depending on his/her age is greater or equal to 18.
Hint => 
Create a class public class StudentVoteChecker and define a method public boolean canStudentVote(int age) which takes in age as a parameter and returns true or false
Inside the method firstly validate the age for a negative number, if a negative return is false cannot vote. For valid age check for age is 18 or above return true; else return false;
In the main function define an array of 10 integer elements, loop through the array by take user input for the student's age, call canStudentVote() and display the result

import java.util.Scanner;
public class Main {
   public static boolean vote(int[] age){
   for(int i=0;i< age.length;i++)
   {
       if(age[i]>=18)
       {
           return true;
       }}
           return false;
       }


   public static void main(String[] args){
       Scanner scanner = new Scanner(System.in);
       int age[] = new int[3];
       for(int i=0;i<age.length;i++){
           System.out.printf("enter the age of student %d",i+1);
           age[i]= scanner.nextInt();
           boolean result = vote(age);
           if(result)
           {
               System.out.println("Student is eligible to vote");
           }
           else{
               System.out.println("not eligible");
           }


       };
   }
}



Write a program to take user input for 5 numbers and check whether a number is positive or negative. Further for positive numbers check if the number is even or odd. Finally compare the first and last elements of the array and display if they are equal, greater, or less
Hint => 
Write a Method to Check whether the number is positive or negative
Write a Method to check whether the number is even or odd
Write a Method to compare two numbers and return 1 if number1 > number2 or 0 if both are equal or -1 if number1 < number2 
In the main program, Loop through the array using the length call the method isPositive() and if positive call method isEven() and print accordingly 
If the number is negative, print negative. 
Finally compare the first and last element of the array by calling the method compare() and display if they are equal, greater, or less

import java.util.Scanner;
public class Main{
   public static int positive(int n)
   {
       if(n>0)
       {
           System.out.print("positive");
           if(n%2==0)
           {
               System.out.println(" even");
           }
           else
           {
               System.out.println(" odd");
           }
       }
       else
       {
           System.out.println("negative");
       }
       return 0;
   }
   public static int compare(int[] n)
   {
       if(n[0]==n[n.length-1])
       {
           System.out.println("equal");
       }
       return 0;
   }
   public static void main(String[] args)
   {
       Scanner scanner = new Scanner(System.in);
       int[] numbers = new int[5];
       for(int i =0; i<numbers.length; i++)
       {
           numbers[i]=scanner.nextInt();
       }
       for(int i =0;i<numbers.length;i++)
       {
           int result = positive(numbers[i]);

       }
       int result = compare(numbers);
   }
}



