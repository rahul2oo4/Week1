Write a program to input the Principal, Rate, and Time values and calculate Simple Interest.
Hint => 
Simple Interest = Principal * Rate * Time / 100
Take user input for principal, rate, time
Write a method to calculate the simple interest given principle, rate and time as parameters
Output “The Simple Interest is ___ for Principal ___, Rate of Interest ___ and Time ___”

import java.util.Scanner;
public class Main {
   public double simpleinterest(double principal, double rate, int interest)
   {
       double SI = (principal*rate*interest)/100;
       return SI;
   }
   public static void main(String[] args){
       Scanner scanner = new Scanner(System.in);
       Main obj = new Main();
       System.out.println("p:");
       double principal = scanner.nextDouble();
       System.out.println("r:");
       double rate = scanner.nextDouble();
       System.out.println("i:");
       int interest = scanner.nextInt();
       double result = obj.simpleinterest(principal,rate,interest);
       System.out.println(result);
   }
}


Create a program to find the maximum number of handshakes among N number of students.
Hint => 
Get integer input for number of students
Use the combination = (n * (n - 1)) / 2 formula to calculate the maximum number of possible handshakes.
Write a method to use the combination formulae to calculate the number of handshakes
import java.util.Scanner;
public class Main {
 public double handshakes(int n){
  double combination = (n*(n-1))/2;
  return combination;
 }
 public static void main(String[] args)
 {
     Scanner scanner = new Scanner(System.in);
     Main obj = new Main();
     int n = scanner.nextInt();
     double result = obj.handshakes(n);
     System.out.println("The total no.of ways is: "+result);
 }
}


Create a program to find the maximum number of handshakes among N number of students.
Hint => 
Get integer input for numberOfStudents variable.
Use the combination = (n * (n - 1)) / 2 formula to calculate the maximum number of possible handshakes.
Display the number of possible handshakes.
import java.util.Scanner;
public class Main {
 public double handshakes(int n){
  double combination = (n*(n-1))/2;
  return combination;
 }
 public static void main(String[] args)
 {
     Scanner scanner = new Scanner(System.in);
     Main obj = new Main();
     int n = scanner.nextInt();
     double result = obj.handshakes(n);
     System.out.println("The total no.of ways is: "+result);
 }
}


An athlete runs in a triangular park with sides provided as input by the user in meters. If the athlete wants to complete a 5 km run, then how many rounds must the athlete complete
Hint => 
Take user input for 3 sides of a triangle 
The perimeter of a triangle is the addition of all sides and rounds is distance/perimeter
Write a Method to compute the number of rounds user needs to do to complete 5km run

   import java.util.Scanner;
public class TriangularRun {
    public static double calculateRounds(double side1, double side2, double side3) {
        double perimeter = side1 + side2 + side3;
        double totalDistanceKm = 5.0; 
        double totalDistanceMeters = totalDistanceKm * 1000; 
        return totalDistanceMeters / perimeter;
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the length of side 1 : ");
        double side1 = scanner.nextDouble();
        System.out.print("Enter the length of side 2: ");
        double side2 = scanner.nextDouble();
        System.out.print("Enter the length of side 3: ");
        double side3 = scanner.nextDouble();
        double rounds = calculateRounds(side1, side2, side3);
        System.out.printf("The athlete needs to complete %.2f rounds to run 5 km\n", rounds);    }
}


Write a program to check whether a number is positive, negative, or zero.
Hint => Get integer input from the user. Write a Method to return -1 for negative number, 1 for positive number and 0 if number is zero

import java.util.Scanner;
public class NumberCheck {
    public static int checknumber(int number) {
        if (number < 0) {
            return -1; 
        } else if (number > 0) {
            return 1; 
        } else {
            return 0; 
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter an integer: ");
        int inputNumber = scanner.nextInt();
        int result = checknumber(inputNumber);
        if (result == -1) {
            System.out.println("The number is negative");
        } else if (result == 1) {
            System.out.println("The number is positive");
        } else {
            System.out.println("The number is zero");
        }
          }
}


Write a program SpringSeason that takes two int values month and day from the command line and prints “Its a Spring Season” otherwise prints “Not a Spring Season”. 
Hint => Spring Season is from March 20 to June 20. Write a Method to check for Spring season and return a boolean true or false 
import java.util.Scanner;

class SpringSeasonSimple {

   public static boolean isSpringSeason(int month, int day) {
       if (month == 3 && day >= 20 && day <= 31) {
           return true;
       } else if (month == 4 && day >= 1 && day <= 30) {
           return true;
       } else if (month == 5 && day >= 1 && day <= 31) {
           return true;
       } else if (month == 6 && day >= 1 && day <= 20) {
           return true;
       } else {
           return false;
       }
   }

   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       int month = scanner.nextInt();
       int date = scanner.nextInt();

       if (isSpringSeason(month, date)) {
           System.out.println("Its a Spring Season");
       } else {
           System.out.println("Not a Spring Season");
       }
   }
}


Write a program to find the sum of n natural numbers using loop
Hint => Get integer input from the user. Write a Method to find the sum of n natural numbers using loop 

     import java.util.Scanner;
public class Main{
   public static int natural(int n){
       int sum=0;
       for(int i=0;i<=n;i++)
       {
           sum+=i;
       }
       return sum;
   }
   public static void main(String[] args){
       Scanner scanner = new Scanner(System.in);
       System.out.println("number: ");
       int n = scanner.nextInt();
       int result= natural(n);
       System.out.println(result);
   }
}


Write a program to find the smallest and the largest of the 3 numbers.
Hint => 
Take user input for 3 numbers
Write a single method to find the smallest and largest of the three numbers

public static int[] findSmallestAndLargest(int number1, int number2, int number3)
import java.util.Scanner;
public class Main {
   public static int[] sl(int num1, int num2, int num3) {
       int smallest = num1;
       int largest = num1;
       if (num2 < smallest) {
           smallest = num2;
       }
       if (num3 < smallest) {
           smallest = num3;
       }
       if (num2 > largest) {
           largest = num2;
       }
       if (num3 > largest) {
           largest = num3;
       }
       return new int[]{smallest, largest};
   }
   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       System.out.print("Enter the first number: ");
       int number1 = scanner.nextInt();
       System.out.print("Enter the second number: ");
       int number2 = scanner.nextInt();
       System.out.print("Enter the third number: ");
       int number3 = scanner.nextInt();
       int[] result = sl(number1, number2, number3);
       System.out.println("Smallest number: " + result[0]);
       System.out.println("Largest number: " + result[1]);
   }
}


Write a program to take 2 numbers and print their quotient and reminder
Hint => 
Take user input as integer
Use division operator (/) for quotient and moduli operator (%) for reminder
Write Method to find the reminder and the quotient of a number 

public static int[] findRemainderAndQuotient(int number, int divisor) 
import java.util.Scanner;
public class Main {
   public static int[] qr(int n,int div ){
       int q =n/div;
       int r=n%div;
       return new int[] {q,r};
   }
   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       System.out.print("Enter the number: ");
       int n = scanner.nextInt();
       System.out.println("Enter the divisor: ");
       int div = scanner.nextInt();
       int[] arr = qr(n,div);
       System.out.printf("%d is quotient,%d is remainder",arr[0],arr[1]);
   }
}


Create a program to divide N number of chocolates among M children. Print the number of chocolates each child will get and also the remaining chocolates
Hint => 
Get an integer value from user for the numberOfchocolates and numberOfChildren.
Write the method to find the number of chocolates each child gets and number of remaining chocolates
public static int[] findRemainderAndQuotient(int number, int divisor) 

import java.util.Scanner;
public class Main {
   public static int[] qr(int n,int div ){
       int q =n/div;
       int r=n%div;
       return new int[] {q,r};
   }
   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       System.out.print("Enter the chocolates: ");
       int n = scanner.nextInt();
       System.out.println("Enter the students: ");
       int div = scanner.nextInt();
       int[] arr = qr(n,div);
       System.out.printf("%d are distributed to each ,%d are not",arr[0],arr[1]);
   }
}


Write a program calculate the wind chill temperature given the temperature and wind speed
Hint => 
Write a method to calculate the wind chill temperature using the formula 
windChill = 35.74 + 0.6215 *temp + (0.4275*temp - 35.75) * windSpeed0.16 

public double calculateWindChill(double temperature, double windSpeed)
class windchill {

   public double wc(double temperature, double windSpeed) {
       double windChill = 35.74 + 0.6215 * temperature +
               (0.4275 * temperature - 35.75) * Math.pow(windSpeed, 0.16);
       return windChill;
   }

   public static void main(String[] args) {
       windchill calculator = new windchill();
       double temperature = 20.0;
       double windSpeed = 10.0;

       double windChill = calculator.wc(temperature, windSpeed);
       System.out.printf("Wind Chill Temperature: %.2f\n", windChill);
   }
}


Write a program to calculate various trigonometric functions using Math class given an angle in degrees
Hint => 
Method to calculate various trigonometric functions, Firstly convert to radians and then use Math function to find sine, cosine and tangent.
public double[] calculateTrigonometricFunctions(double angle)

import java.util.Scanner;
public class Main {
   public static double[] trig(int angle){
       double radians = Math.toRadians(angle);
       double sin = Math.sin(radians);
       double cos = Math.cos(radians);
       double tan = Math.tan(radians);
       return new double[]{radians,sin,cos,tan};
   }
   public static void main(String[] args){
       Scanner scanner = new Scanner(System.in);
       int angle = scanner.nextInt();
       double[] result = trig(angle);
       System.out.printf("Radians: %f, sin: %f, cos: %f, tan: %f",result[0],result[1],result[2],result[3]);
       }}


