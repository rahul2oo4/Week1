Create a program to print odd and even numbers between 1 to the number entered by the user.
Hint => 
Get an integer input from the user, assign to a variable number and check for Natural Number
Using a for loop, iterate from 1 to the number
In each iteration of the loop, print the number is odd or even number

import  java.util.Scanner;
public class Main {
   public static void main(String[] args){
       Scanner scanner = new Scanner(System.in);
       System.out.println("Enter the number:");
       int n = scanner.nextInt();
       for(int i=1;i<n;i++)
       {
           if(i%2==0){
               System.out.println("Even:" +i);
           }
           else{
               System.out.println("Odd: "+i);
           }
       }
   }
}

Create a program to find the bonuses of employees based on their years of service.
Hint => 
Zara decided to give a bonus of 5% to employees whose year of service is more than 5 years.
Take salary and year of service in the year as input.
Print the bonus amount.

import  java.util.Scanner;
public class Main {
   public static void main(String[] args){
       Scanner scanner = new Scanner(System.in);
       System.out.println("Enter salary: ");
       double salary = scanner.nextDouble();
       System.out.println("Enter number of years: ");
       int years = scanner.nextInt();
       if(years>5)
       {
           double newsalary = salary + ((double)5/100)*salary;
           System.out.println(newsalary);
       }
       }
}

Create a program to find the multiplication table of a number entered by the user from 6 to 9.
Hint => 
Take integer input and store it in the variable number
Using a for loop, find the multiplication table of number from 6 to 9 and print it in the format number * i = ___ 

import  java.util.Scanner;
public class Main {
   public static void main(String[] args){
       Scanner scanner = new Scanner(System.in);
       System.out.println("Enter number: ");
       int n = scanner.nextInt();
       for(int i=6;i<=9;i++)
       {

           System.out.printf("%d * %d = %d\n",n,i,n*i);
       }
       }
}

Write a program FizzBuzz, take a number as user input, and check for a positive integer. If positive integer, loop and print the number, but for multiples of 3 print "Fizz" instead of the number, for multiples of 5 print "Buzz", and for multiples of both print "FizzBuzz".
Hint => 
Take the user input number, check for a positive integer, and use for loop to display

import  java.util.Scanner;
public class Main {
   public static void main(String[] args){
       Scanner scanner = new Scanner(System.in);
       System.out.println("Enter number: ");
       int n = scanner.nextInt();
       if(n>5){
       for(int i=1;i<=n;i++){
           if((i%3==0)&&(i%5==0))
           {
               System.out.println("FizzBuzz");
           }
           else if ((i%3==0)&&(i%5!=0))
           {
               System.out.println("Fizz");
           }
           else if ((i%5==0)&&(i%3!=0))
           {
               System.out.println("Buzz");
           }
           else
           {
               System.out.println(i);
           }}     }}}


Rewrite the program 4 FizzBuzz using the while loop 

import  java.util.Scanner;
public class Main {
   public static void main(String[] args){
       Scanner scanner = new Scanner(System.in);
       System.out.println("Enter number: ");
       int n = scanner.nextInt();
       if(n>5){
           int i =1;
       while(i<=n){
           if((i%3==0)&&(i%5==0))
           {
               System.out.println("FizzBuzz");
               i++;
           }
           else if ((i%3==0)&&(i%5!=0))
           {
               System.out.println("Fizz");
               i++;
           }
           else if ((i%5==0)&&(i%3!=0))
           {
               System.out.println("Buzz");
               i++;
           }
           else
           {
               System.out.println(i);
               i++;
           }}}}}


Create a program to find the youngest friends among 3 Amar, Akbar, and Anthony based on their ages and the tallest among the friends based on their heights
Hint => 
Take user input for the age and height of the 3 friends and store it in a variable
Find the smallest of the 3 ages to find the youngest friend and display it
Find the largest of the 3 heights to find the tallest friend and display it
Create a program to find the factors of a number taken as user input.
Hint => 
Get the input value for a variable named number and check if it is a positive integer.
Run a for loop from i = 1 to i < number. In each iteration of the loop, check if the number is perfectly divisible by i. If true, print the value of i.

import  java.util.Scanner;
public class Main {
   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       System.out.println("Enter number: ");
       int n = scanner.nextInt();
       for(int i=1; i<=n; i++)
       {
           if(n%i==0)
           {
               System.out.println(i);
           }
       }
   }}


Rewrite the above program 7 to find the factors of a number using the while loop
Hint => 
Get the input value for a variable named number and check if it is a positive integer.
Create a counter variable and run the _**while**_ loop till the counter is less than the user input number. In each iteration of the loop, check if the number is perfectly divisible by the counter. If true, print the value of the counter.

import  java.util.Scanner;
public class Main {
   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       System.out.println("Enter number: ");
       int n = scanner.nextInt();
       int i =1;
       while(i<=n)
       {
           if(n%i==0)
           {
               System.out.println(i);
           }
           i++;
       }
   }}


Create a program to print the greatest factor of a number beside itself using a loop.
Hint => 
Get an integer input and assign it to the number variable. As well as define a greatestFactor variable and assign it to 1
Create a for loop that runs from last but one till 1 as in i = number - 1 to i = 1.
Inside the loop, check if the number is perfectly divisible by i then assign i to greatestFactor variable and break the loop.
Display the greatestFactor variable outside the loop

import  java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter number: ");
        int n = scanner.nextInt();
        for(int i=n-1;i<n;i--)
        {
            if(n%i==0)
            {
                System.out.println(i);
                break;
            }
        }
    }}


10.Rewrite the above program to print the greatest factor of a number beside itself using a while loop.
Hint => 
Get an integer input and assign it to the number variable. As well as define a greatestFactor variable and assign it to 1
Create a variable counter and assign counter = number - 1; Use the while loop till the counter is equal to 1.
Inside the loop, check if the number is perfectly divisible by the counter then assign the counter to greatestFactor variable and break the loop.
Display the greatestFactor variable outside the loop

import  java.util.Scanner;
public class Main {
   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       System.out.println("Enter number: ");
       int n = scanner.nextInt();
       int i =n-1;
       while(i<n)
       {
           if(n%i==0)
           {
               System.out.println(i);
               break;
           }
           i--;
       }
   }}



Create a program to find all the multiples of a number taken as user input below 100.
Hint => 
Get the input value for a variable named number. Check the number is a positive integer and less than 100.
Run a for loop backward: from i = 100 to i = 1.
Inside the loop, check if i perfectly divide the number. If true, print the number and continue the loop.

import  java.util.Scanner;
public class Main {
   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       System.out.println("Enter number: ");
       int n = scanner.nextInt();
       for(int i=1;;i++)
       {
           int z = n*i;
                   if(z<100){
                       System.out.println(z);
                   }
                   else {
                       break;
                   }

       }
   }}


Create a program to find the power of a number.
Hint => 
Get integer input for two variables - number and power and check for positive integer
Create a result variable with an initial value of 1.
Run a for loop from i = 1 to i <= power. In each iteration of the loop, multiply the result by the number and assign the value to the result. Finally, print the result

import  java.util.Scanner;
public class Main {
   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       System.out.println("Enter number: ");
       int n = scanner.nextInt();
       System.out.println("Enter power: ");
       int power = scanner.nextInt();
       int result = 1;
       for(int i=1;i<=power;i++)
       {
           result=result*n;
       }
       System.out.println(result);
   }}


Rewrite the program to find all the multiples of a number below 100 using while loop.
Hint => 
Get the input value for a variable named number. Check the number is a positive integer and less than 100.
Create a counter variable and assign counter = number - 1; Use a while till the counter is > 1
Inside the loop, check if the counter perfectly divides the number. If true, print the number and continue the loop.

import  java.util.Scanner;
public class Main {
   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       System.out.println("Enter number: ");
       int n = scanner.nextInt();
       int i=1;
       while(i<100){
       {
           int z = n*i;
                   if(z<100){
                       System.out.println(z);
                       i++;
                   }
                   else {
                       break;
                   }

       }
   }}}


Rewrite the above program to find the power of a number using a while loop.
Hint => 
Get integer input for two variables named number and power.
Create a result variable with an initial value of 1.
Create a temp variable counter and initialize to zero. Use the while loop till _**counter == power**_.
In each iteration of the loop, multiply the result by the number and assign the value to the result. Also, increment the counter.
Finally, print the result

import  java.util.Scanner;
public class Main {
   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       System.out.println("Enter number: ");
       int n = scanner.nextInt();
       System.out.println("Enter power: ");
       int power = scanner.nextInt();
       int result = 1;
       int i =1;
       while(i<=power)
       {
           result=result*n;
           i++;
       }
       System.out.println(result);
   }}


