Level 2 Practice Programs
Create a program to find the bonus of 10 employees based on their years of service and the total bonus amount the company Zara has to pay, along with the old and new salary.
Hint => 
Zara decides to give a bonus of 5% to employees whose year of service is more than 5 years or 2% if less than 5 years
Define a double array to save salary and years of service for each of the 10 employees
Also define a double array to save the new salary and the bonus amount as well as variables to save the total bonus, total old salary, and new salary
Define a loop to take input from the user. If salary or year of service is an invalid number then ask the use to enter again. Note in this case you will have to decrement the index counter
Define another loop to calculate the bonus of 10 employees based on their years of service. Save the bonus in the array, compute the new salary, and save in the array. Also, the total bonus and total old and new salary can be calculated in the loop
Print the total bonus payout as well as the total old and new salary of all the employees

import java.util.Scanner;
public class Main{
   public static void main(String[] args){
       Scanner scanner = new Scanner(System.in);
       double[] salary = new double[5];
       double[] years = new double[5];
       double[] newsalary = new double[5];
       double[] bonus = new double[5];
       double totalbonus=0, oldsalary=0, neswsalary=0;
       for(int i=0; i<salary.length; i++)
       {
           System.out.println("Enter the salary of employee " + (i+1));
           salary[i]= scanner.nextDouble();
           System.out.println("Enter the years of service:" );
           years[i]=scanner.nextDouble();
       }
       for(int i=0;i<salary.length;i++)
       {
           if(years[i]>5)
           {
               newsalary[i]=salary[i] + ((salary[i]*5)/100);
           }
           else {
               newsalary[i]=salary[i] + ((salary[i]*2)/100);
           }
       }
       for(int i=0;i<salary.length;i++)
       {
           if(years[i]>5)
           {
               bonus[i] = (salary[i]*5)/100;
           }
           else
           {
               bonus[i] = (salary[i]*2)/100;

           }
       }
       for(int i=0;i<salary.length;i++)
       {
           totalbonus += bonus[i];
           neswsalary += newsalary[i];
           oldsalary += salary[i];
       }
       System.out.println("Total bonus payout is: "+totalbonus);
       for(int i=0;i<salary.length;i++)
       {
           System.out.printf("The old salary of employee 1 is %.2f and the new salary is %.2f\n",salary[i],newsalary[i]);


       }
   }
}


Create a program to find the youngest friends among 3 Amar, Akbar, and Anthony based on their ages and the tallest among the friends based on their heights
Hint => 
Take user input for age and height for the 3 friends and store it in two arrays each to store the values for age and height of the 3 friends
Loop through the array and find the youngest of the 3 friends and the tallest of the 3 friends
Finally display the youngest and tallest of the 3 friends

import java.util.Arrays;
import java.util.Scanner;
public class Main{
   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       int[] age = new int[3];
       double[] height = new double[3];
       for (int i = 0; i < age.length; i++) {
           System.out.println("Enter the age: ");
           age[i] = scanner.nextInt();
           System.out.println("Enter the height: ");
           height[i] = scanner.nextDouble();
       }
       Arrays.sort(age);
       Arrays.sort(height);
       System.out.printf("The youngest is %d years old\n",age[0]);
       System.out.printf("The tallest person is %.2f cm tall",height[height.length-1]);
   }
   }



Create an integer variable index with the value 0 to reflect the array index.
Use a loop to iterate until the number is not equal to 0.
Remove the last digit from the number in each iteration and add it to the array.
Increment the index by 1 in each iteration and if the index count equals maxDigit then break out of the loop and the remaining digits are not added to the array.
Define variable to store largest and second largest digit and initialize it to zero
Loop through the array and use conditional statements to find the largest and second largest number in the array
Finally display the largest  and second-largest number

import java.util.Arrays;
import java.util.Scanner;
public class Main{
   public static void main(String[] args) {
       Scanner scanner = new Scanner(System.in);
       int n = scanner.nextInt();
       int[] arr = new int[10];
       int i=0;
       while(n!=0)
       {
           arr[i]=n%10;
           n=n/10;
           i++;
           if(i==10){
               break;
           }
       }
       Arrays.sort(arr,0,i);
       System.out.printf("The smallest element is "+ arr[0]);

   }
   }



Create a program to take a number as input and reverse the number. To do this, store the digits of the number in an array and display the array in reverse order
Hint => 
Take user input for a number. 
Find the count of digits in the number. 
Find the digits in the number and save them in an array
Create an array to store the elements of the digits array in reverse order
Finally, display the elements of the array in reverse order  

import java.util.Arrays;
import java.util.Scanner;
public class Main{
   public static void main(String[] args){
       Scanner scanner = new Scanner(System.in);
       int n = scanner.nextInt();
       int temp =n;
       int count =0;
       while(n!=0)
       {
           n=n/10;
           count++;
       }
       int[] arr = new int[count];
       for(int i=0; i<count;i++)
       {
           arr[i]=temp%10;
           temp=temp/10;
       }
       for(int i =0; i<= count-1;i++)
       {
           System.out.print(arr[i]);
       }

   }
}


An organization took up an exercise to find the Body Mass Index (BMI) of all the persons in the team. For this create a program to find the BMI and display the height, weight, BMI and status of each individual
Hint => 
Take input for a number of persons
Create arrays to store the weight, height, BMI, and weight status of the persons
Take input for the weight and height of the persons
Calculate the BMI of all the persons and store them in an array and also find the weight status of the persons
Display the height, weight, BMI, and weight status of each person
Use the table to determine the weight status of the person
 
import java.util.Scanner;
public class BmiCalc {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        System.out.print("no of people: ");
        int num = s.nextInt();
        double[] w = new double[num];
        double[] h = new double[num];
        double[] b = new double[num];
        String[] st = new String[num];
        for (int i = 0; i < num; i++) {
            System.out.print("Weight of person " + (i + 1) + ": ");
            w[i] = s.nextDouble();
            System.out.print("Height of person " + (i + 1) + ": ");
            h[i] = s.nextDouble();
        }
        for (int i = 0; i < num; i++) {
            b[i] = w[i] / (h[i] * h[i]);
            if (b[i] < 18.5) {
                st[i] = "Underweight";
            } else if (b[i] < 25) {
                st[i] = "Normal";
            } else if (b[i] < 30) {
                st[i] = "Overweight";
            } else {
                st[i] = "Obese";
            }
        }
        System.out.println("\nResults:");
        System.out.printf("%-10s%-10s%-10s%-20s\n", "Height", "Weight", "BMI", "Status");
        for (int i = 0; i < num; i++) {
            System.out.printf("%-10.2f%-10.2f%-10.2f%-20s\n", h[i], w[i], b[i], st[i]);
        }
            }
}




Create a program to take a number as input find the frequency of each digit in the number using an array and display the frequency of each digit
Hint => 
Take the input for a number
Find the count of digits in the number
Find the digits in the number and save them in an array
Find the frequency of each digit in the number. For this define a frequency array of size 10, Loop through the digits array, and increase the frequency of each digit
Display the frequency of each digit in the number

import java.util.Scanner;
public class Main{
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter a number: ");
        long number = input.nextLong();

        if (number == 0) {
            System.out.println("Frequency of 0: 1");
            return;
        }

        long temp = Math.abs(number); // Handle negative numbers
        int digitCount = 0;
        long temp2 = temp;

        while (temp2 != 0) {
            temp2 /= 10;
            digitCount++;
        }

        int[] digits = new int[digitCount];
        for (int i = digitCount - 1; i >= 0; i--) {
            digits[i] = (int) (temp % 10);
            temp /= 10;
        }

        int[] frequency = new int[10];
        for (int digit : digits) {
            frequency[digit]++;
        }

        System.out.println("Digit Frequencies:");
        for (int i = 0; i < 10; i++) {
            if (frequency[i] > 0) {
                System.out.println("Frequency of " + i + ": " + frequency[i]);
            }
        }
    }
}


